<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.bronze.daos.TDepartmentMapper" >
  <resultMap id="BaseResultMap" type="cn.bronze.entities.TDepartment" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="depcode" property="depcode" jdbcType="VARCHAR" />
    <result column="depname" property="depname" jdbcType="VARCHAR" />
    <result column="depaddress" property="depaddress" jdbcType="VARCHAR" />
    <result column="depprincipal" property="depprincipal" jdbcType="VARCHAR" />
    <result column="deptelephone" property="deptelephone" jdbcType="VARCHAR" />
    <result column="depstage" property="depstage" jdbcType="BIT" />
    <result column="depstate" property="depstate" jdbcType="VARCHAR" />
    <result column="depusernum" property="depusernum" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, depcode, depname, depaddress, depprincipal, deptelephone, depstage, depstate, 
    depusernum
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="cn.bronze.entities.TDepartmentExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_department
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from t_department
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from t_department
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="cn.bronze.entities.TDepartmentExample" >
    delete from t_department
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.bronze.entities.TDepartment" >
    insert into t_department (id, depcode, depname, 
      depaddress, depprincipal, deptelephone, 
      depstage, depstate, depusernum
      )
    values (#{id,jdbcType=INTEGER}, #{depcode,jdbcType=VARCHAR}, #{depname,jdbcType=VARCHAR}, 
      #{depaddress,jdbcType=VARCHAR}, #{depprincipal,jdbcType=VARCHAR}, #{deptelephone,jdbcType=VARCHAR}, 
      #{depstage,jdbcType=BIT}, #{depstate,jdbcType=VARCHAR}, #{depusernum,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="cn.bronze.entities.TDepartment" >
    insert into t_department
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="depcode != null" >
        depcode,
      </if>
      <if test="depname != null" >
        depname,
      </if>
      <if test="depaddress != null" >
        depaddress,
      </if>
      <if test="depprincipal != null" >
        depprincipal,
      </if>
      <if test="deptelephone != null" >
        deptelephone,
      </if>
      <if test="depstage != null" >
        depstage,
      </if>
      <if test="depstate != null" >
        depstate,
      </if>
      <if test="depusernum != null" >
        depusernum,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="depcode != null" >
        #{depcode,jdbcType=VARCHAR},
      </if>
      <if test="depname != null" >
        #{depname,jdbcType=VARCHAR},
      </if>
      <if test="depaddress != null" >
        #{depaddress,jdbcType=VARCHAR},
      </if>
      <if test="depprincipal != null" >
        #{depprincipal,jdbcType=VARCHAR},
      </if>
      <if test="deptelephone != null" >
        #{deptelephone,jdbcType=VARCHAR},
      </if>
      <if test="depstage != null" >
        #{depstage,jdbcType=BIT},
      </if>
      <if test="depstate != null" >
        #{depstate,jdbcType=VARCHAR},
      </if>
      <if test="depusernum != null" >
        #{depusernum,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.bronze.entities.TDepartmentExample" resultType="java.lang.Integer" >
    select count(*) from t_department
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update t_department
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.depcode != null" >
        depcode = #{record.depcode,jdbcType=VARCHAR},
      </if>
      <if test="record.depname != null" >
        depname = #{record.depname,jdbcType=VARCHAR},
      </if>
      <if test="record.depaddress != null" >
        depaddress = #{record.depaddress,jdbcType=VARCHAR},
      </if>
      <if test="record.depprincipal != null" >
        depprincipal = #{record.depprincipal,jdbcType=VARCHAR},
      </if>
      <if test="record.deptelephone != null" >
        deptelephone = #{record.deptelephone,jdbcType=VARCHAR},
      </if>
      <if test="record.depstage != null" >
        depstage = #{record.depstage,jdbcType=BIT},
      </if>
      <if test="record.depstate != null" >
        depstate = #{record.depstate,jdbcType=VARCHAR},
      </if>
      <if test="record.depusernum != null" >
        depusernum = #{record.depusernum,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update t_department
    set id = #{record.id,jdbcType=INTEGER},
      depcode = #{record.depcode,jdbcType=VARCHAR},
      depname = #{record.depname,jdbcType=VARCHAR},
      depaddress = #{record.depaddress,jdbcType=VARCHAR},
      depprincipal = #{record.depprincipal,jdbcType=VARCHAR},
      deptelephone = #{record.deptelephone,jdbcType=VARCHAR},
      depstage = #{record.depstage,jdbcType=BIT},
      depstate = #{record.depstate,jdbcType=VARCHAR},
      depusernum = #{record.depusernum,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.bronze.entities.TDepartment" >
    update t_department
    <set >
      <if test="depcode != null" >
        depcode = #{depcode,jdbcType=VARCHAR},
      </if>
      <if test="depname != null" >
        depname = #{depname,jdbcType=VARCHAR},
      </if>
      <if test="depaddress != null" >
        depaddress = #{depaddress,jdbcType=VARCHAR},
      </if>
      <if test="depprincipal != null" >
        depprincipal = #{depprincipal,jdbcType=VARCHAR},
      </if>
      <if test="deptelephone != null" >
        deptelephone = #{deptelephone,jdbcType=VARCHAR},
      </if>
      <if test="depstage != null" >
        depstage = #{depstage,jdbcType=BIT},
      </if>
      <if test="depstate != null" >
        depstate = #{depstate,jdbcType=VARCHAR},
      </if>
      <if test="depusernum != null" >
        depusernum = #{depusernum,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.bronze.entities.TDepartment" >
    update t_department
    set depcode = #{depcode,jdbcType=VARCHAR},
      depname = #{depname,jdbcType=VARCHAR},
      depaddress = #{depaddress,jdbcType=VARCHAR},
      depprincipal = #{depprincipal,jdbcType=VARCHAR},
      deptelephone = #{deptelephone,jdbcType=VARCHAR},
      depstage = #{depstage,jdbcType=BIT},
      depstate = #{depstate,jdbcType=VARCHAR},
      depusernum = #{depusernum,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>