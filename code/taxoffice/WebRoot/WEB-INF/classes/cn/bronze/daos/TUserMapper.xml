<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.bronze.daos.TUserMapper" >
  <resultMap id="BaseResultMap" type="cn.bronze.entities.TUser" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="useraccount" property="useraccount" jdbcType="VARCHAR" />
    <result column="userpassword" property="userpassword" jdbcType="VARCHAR" />
    <result column="usercode" property="usercode" jdbcType="VARCHAR" />
    <result column="username" property="username" jdbcType="VARCHAR" />
    <result column="usertype" property="usertype" jdbcType="VARCHAR" />
    <result column="userbankcode" property="userbankcode" jdbcType="VARCHAR" />
    <result column="usersalarycode" property="usersalarycode" jdbcType="VARCHAR" />
    <result column="usersex" property="usersex" jdbcType="VARCHAR" />
    <result column="userstate" property="userstate" jdbcType="VARCHAR" />
    <result column="userdep" property="userdep" jdbcType="VARCHAR" />
    <result column="userrole" property="userrole" jdbcType="INTEGER" />
    <result column="userduty" property="userduty" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, useraccount, userpassword, usercode, username, usertype, userbankcode, usersalarycode, 
    usersex, userstate, userdep, userrole, userduty
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="cn.bronze.entities.TUserExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_user
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from t_user
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from t_user
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="cn.bronze.entities.TUserExample" >
    delete from t_user
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.bronze.entities.TUser" >
    insert into t_user (id, useraccount, userpassword, 
      usercode, username, usertype, 
      userbankcode, usersalarycode, usersex, 
      userstate, userdep, userrole, 
      userduty)
    values (#{id,jdbcType=INTEGER}, #{useraccount,jdbcType=VARCHAR}, #{userpassword,jdbcType=VARCHAR}, 
      #{usercode,jdbcType=VARCHAR}, #{username,jdbcType=VARCHAR}, #{usertype,jdbcType=VARCHAR}, 
      #{userbankcode,jdbcType=VARCHAR}, #{usersalarycode,jdbcType=VARCHAR}, #{usersex,jdbcType=VARCHAR}, 
      #{userstate,jdbcType=VARCHAR}, #{userdep,jdbcType=VARCHAR}, #{userrole,jdbcType=INTEGER}, 
      #{userduty,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="cn.bronze.entities.TUser" >
    insert into t_user
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="useraccount != null" >
        useraccount,
      </if>
      <if test="userpassword != null" >
        userpassword,
      </if>
      <if test="usercode != null" >
        usercode,
      </if>
      <if test="username != null" >
        username,
      </if>
      <if test="usertype != null" >
        usertype,
      </if>
      <if test="userbankcode != null" >
        userbankcode,
      </if>
      <if test="usersalarycode != null" >
        usersalarycode,
      </if>
      <if test="usersex != null" >
        usersex,
      </if>
      <if test="userstate != null" >
        userstate,
      </if>
      <if test="userdep != null" >
        userdep,
      </if>
      <if test="userrole != null" >
        userrole,
      </if>
      <if test="userduty != null" >
        userduty,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="useraccount != null" >
        #{useraccount,jdbcType=VARCHAR},
      </if>
      <if test="userpassword != null" >
        #{userpassword,jdbcType=VARCHAR},
      </if>
      <if test="usercode != null" >
        #{usercode,jdbcType=VARCHAR},
      </if>
      <if test="username != null" >
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="usertype != null" >
        #{usertype,jdbcType=VARCHAR},
      </if>
      <if test="userbankcode != null" >
        #{userbankcode,jdbcType=VARCHAR},
      </if>
      <if test="usersalarycode != null" >
        #{usersalarycode,jdbcType=VARCHAR},
      </if>
      <if test="usersex != null" >
        #{usersex,jdbcType=VARCHAR},
      </if>
      <if test="userstate != null" >
        #{userstate,jdbcType=VARCHAR},
      </if>
      <if test="userdep != null" >
        #{userdep,jdbcType=VARCHAR},
      </if>
      <if test="userrole != null" >
        #{userrole,jdbcType=INTEGER},
      </if>
      <if test="userduty != null" >
        #{userduty,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.bronze.entities.TUserExample" resultType="java.lang.Integer" >
    select count(*) from t_user
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update t_user
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.useraccount != null" >
        useraccount = #{record.useraccount,jdbcType=VARCHAR},
      </if>
      <if test="record.userpassword != null" >
        userpassword = #{record.userpassword,jdbcType=VARCHAR},
      </if>
      <if test="record.usercode != null" >
        usercode = #{record.usercode,jdbcType=VARCHAR},
      </if>
      <if test="record.username != null" >
        username = #{record.username,jdbcType=VARCHAR},
      </if>
      <if test="record.usertype != null" >
        usertype = #{record.usertype,jdbcType=VARCHAR},
      </if>
      <if test="record.userbankcode != null" >
        userbankcode = #{record.userbankcode,jdbcType=VARCHAR},
      </if>
      <if test="record.usersalarycode != null" >
        usersalarycode = #{record.usersalarycode,jdbcType=VARCHAR},
      </if>
      <if test="record.usersex != null" >
        usersex = #{record.usersex,jdbcType=VARCHAR},
      </if>
      <if test="record.userstate != null" >
        userstate = #{record.userstate,jdbcType=VARCHAR},
      </if>
      <if test="record.userdep != null" >
        userdep = #{record.userdep,jdbcType=VARCHAR},
      </if>
      <if test="record.userrole != null" >
        userrole = #{record.userrole,jdbcType=INTEGER},
      </if>
      <if test="record.userduty != null" >
        userduty = #{record.userduty,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update t_user
    set id = #{record.id,jdbcType=INTEGER},
      useraccount = #{record.useraccount,jdbcType=VARCHAR},
      userpassword = #{record.userpassword,jdbcType=VARCHAR},
      usercode = #{record.usercode,jdbcType=VARCHAR},
      username = #{record.username,jdbcType=VARCHAR},
      usertype = #{record.usertype,jdbcType=VARCHAR},
      userbankcode = #{record.userbankcode,jdbcType=VARCHAR},
      usersalarycode = #{record.usersalarycode,jdbcType=VARCHAR},
      usersex = #{record.usersex,jdbcType=VARCHAR},
      userstate = #{record.userstate,jdbcType=VARCHAR},
      userdep = #{record.userdep,jdbcType=VARCHAR},
      userrole = #{record.userrole,jdbcType=INTEGER},
      userduty = #{record.userduty,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.bronze.entities.TUser" >
    update t_user
    <set >
      <if test="useraccount != null" >
        useraccount = #{useraccount,jdbcType=VARCHAR},
      </if>
      <if test="userpassword != null" >
        userpassword = #{userpassword,jdbcType=VARCHAR},
      </if>
      <if test="usercode != null" >
        usercode = #{usercode,jdbcType=VARCHAR},
      </if>
      <if test="username != null" >
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="usertype != null" >
        usertype = #{usertype,jdbcType=VARCHAR},
      </if>
      <if test="userbankcode != null" >
        userbankcode = #{userbankcode,jdbcType=VARCHAR},
      </if>
      <if test="usersalarycode != null" >
        usersalarycode = #{usersalarycode,jdbcType=VARCHAR},
      </if>
      <if test="usersex != null" >
        usersex = #{usersex,jdbcType=VARCHAR},
      </if>
      <if test="userstate != null" >
        userstate = #{userstate,jdbcType=VARCHAR},
      </if>
      <if test="userdep != null" >
        userdep = #{userdep,jdbcType=VARCHAR},
      </if>
      <if test="userrole != null" >
        userrole = #{userrole,jdbcType=INTEGER},
      </if>
      <if test="userduty != null" >
        userduty = #{userduty,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.bronze.entities.TUser" >
    update t_user
    set useraccount = #{useraccount,jdbcType=VARCHAR},
      userpassword = #{userpassword,jdbcType=VARCHAR},
      usercode = #{usercode,jdbcType=VARCHAR},
      username = #{username,jdbcType=VARCHAR},
      usertype = #{usertype,jdbcType=VARCHAR},
      userbankcode = #{userbankcode,jdbcType=VARCHAR},
      usersalarycode = #{usersalarycode,jdbcType=VARCHAR},
      usersex = #{usersex,jdbcType=VARCHAR},
      userstate = #{userstate,jdbcType=VARCHAR},
      userdep = #{userdep,jdbcType=VARCHAR},
      userrole = #{userrole,jdbcType=INTEGER},
      userduty = #{userduty,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>