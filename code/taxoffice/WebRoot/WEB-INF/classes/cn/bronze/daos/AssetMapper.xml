<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.bronze.daos.AssetMapper" >
  <resultMap id="BaseResultMap" type="cn.bronze.entities.Asset" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="sob" property="sob" jdbcType="VARCHAR" />
    <result column="code" property="code" jdbcType="VARCHAR" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="type" property="type" jdbcType="VARCHAR" />
    <result column="model" property="model" jdbcType="VARCHAR" />
    <result column="purchasetime" property="purchasetime" jdbcType="TIMESTAMP" />
    <result column="value" property="value" jdbcType="DOUBLE" />
    <result column="user" property="user" jdbcType="VARCHAR" />
    <result column="usedepartment" property="usedepartment" jdbcType="VARCHAR" />
    <result column="keeper" property="keeper" jdbcType="VARCHAR" />
    <result column="keepdepartment" property="keepdepartment" jdbcType="VARCHAR" />
    <result column="usestate" property="usestate" jdbcType="VARCHAR" />
    <result column="certificate" property="certificate" jdbcType="VARCHAR" />
    <result column="state" property="state" jdbcType="VARCHAR" />
    <result column="isbegin" property="isbegin" jdbcType="BIT" />
    <result column="ghostyear" property="ghostyear" jdbcType="VARCHAR" />
    <result column="startusetime" property="startusetime" jdbcType="TIMESTAMP" />
    <result column="makecardtime" property="makecardtime" jdbcType="TIMESTAMP" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
    <result column="number" property="number" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, sob, code, name, type, model, purchasetime, value, user, usedepartment, keeper, 
    keepdepartment, usestate, certificate, state, isbegin, ghostyear, startusetime, makecardtime, 
    remark, number
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="cn.bronze.entities.AssetExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_asset
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from t_asset
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from t_asset
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="cn.bronze.entities.AssetExample" >
    delete from t_asset
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.bronze.entities.Asset" >
    insert into t_asset (id, sob, code, 
      name, type, model, 
      purchasetime, value, user, 
      usedepartment, keeper, keepdepartment, 
      usestate, certificate, state, 
      isbegin, ghostyear, startusetime, 
      makecardtime, remark, number
      )
    values (#{id,jdbcType=INTEGER}, #{sob,jdbcType=VARCHAR}, #{code,jdbcType=VARCHAR}, 
      #{name,jdbcType=VARCHAR}, #{type,jdbcType=VARCHAR}, #{model,jdbcType=VARCHAR}, 
      #{purchasetime,jdbcType=TIMESTAMP}, #{value,jdbcType=DOUBLE}, #{user,jdbcType=VARCHAR}, 
      #{usedepartment,jdbcType=VARCHAR}, #{keeper,jdbcType=VARCHAR}, #{keepdepartment,jdbcType=VARCHAR}, 
      #{usestate,jdbcType=VARCHAR}, #{certificate,jdbcType=VARCHAR}, #{state,jdbcType=VARCHAR}, 
      #{isbegin,jdbcType=BIT}, #{ghostyear,jdbcType=VARCHAR}, #{startusetime,jdbcType=TIMESTAMP}, 
      #{makecardtime,jdbcType=TIMESTAMP}, #{remark,jdbcType=VARCHAR}, #{number,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="cn.bronze.entities.Asset" >
    insert into t_asset
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="sob != null" >
        sob,
      </if>
      <if test="code != null" >
        code,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="type != null" >
        type,
      </if>
      <if test="model != null" >
        model,
      </if>
      <if test="purchasetime != null" >
        purchasetime,
      </if>
      <if test="value != null" >
        value,
      </if>
      <if test="user != null" >
        user,
      </if>
      <if test="usedepartment != null" >
        usedepartment,
      </if>
      <if test="keeper != null" >
        keeper,
      </if>
      <if test="keepdepartment != null" >
        keepdepartment,
      </if>
      <if test="usestate != null" >
        usestate,
      </if>
      <if test="certificate != null" >
        certificate,
      </if>
      <if test="state != null" >
        state,
      </if>
      <if test="isbegin != null" >
        isbegin,
      </if>
      <if test="ghostyear != null" >
        ghostyear,
      </if>
      <if test="startusetime != null" >
        startusetime,
      </if>
      <if test="makecardtime != null" >
        makecardtime,
      </if>
      <if test="remark != null" >
        remark,
      </if>
      <if test="number != null" >
        number,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="sob != null" >
        #{sob,jdbcType=VARCHAR},
      </if>
      <if test="code != null" >
        #{code,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        #{type,jdbcType=VARCHAR},
      </if>
      <if test="model != null" >
        #{model,jdbcType=VARCHAR},
      </if>
      <if test="purchasetime != null" >
        #{purchasetime,jdbcType=TIMESTAMP},
      </if>
      <if test="value != null" >
        #{value,jdbcType=DOUBLE},
      </if>
      <if test="user != null" >
        #{user,jdbcType=VARCHAR},
      </if>
      <if test="usedepartment != null" >
        #{usedepartment,jdbcType=VARCHAR},
      </if>
      <if test="keeper != null" >
        #{keeper,jdbcType=VARCHAR},
      </if>
      <if test="keepdepartment != null" >
        #{keepdepartment,jdbcType=VARCHAR},
      </if>
      <if test="usestate != null" >
        #{usestate,jdbcType=VARCHAR},
      </if>
      <if test="certificate != null" >
        #{certificate,jdbcType=VARCHAR},
      </if>
      <if test="state != null" >
        #{state,jdbcType=VARCHAR},
      </if>
      <if test="isbegin != null" >
        #{isbegin,jdbcType=BIT},
      </if>
      <if test="ghostyear != null" >
        #{ghostyear,jdbcType=VARCHAR},
      </if>
      <if test="startusetime != null" >
        #{startusetime,jdbcType=TIMESTAMP},
      </if>
      <if test="makecardtime != null" >
        #{makecardtime,jdbcType=TIMESTAMP},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="number != null" >
        #{number,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.bronze.entities.AssetExample" resultType="java.lang.Integer" >
    select count(*) from t_asset
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update t_asset
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.sob != null" >
        sob = #{record.sob,jdbcType=VARCHAR},
      </if>
      <if test="record.code != null" >
        code = #{record.code,jdbcType=VARCHAR},
      </if>
      <if test="record.name != null" >
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.type != null" >
        type = #{record.type,jdbcType=VARCHAR},
      </if>
      <if test="record.model != null" >
        model = #{record.model,jdbcType=VARCHAR},
      </if>
      <if test="record.purchasetime != null" >
        purchasetime = #{record.purchasetime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.value != null" >
        value = #{record.value,jdbcType=DOUBLE},
      </if>
      <if test="record.user != null" >
        user = #{record.user,jdbcType=VARCHAR},
      </if>
      <if test="record.usedepartment != null" >
        usedepartment = #{record.usedepartment,jdbcType=VARCHAR},
      </if>
      <if test="record.keeper != null" >
        keeper = #{record.keeper,jdbcType=VARCHAR},
      </if>
      <if test="record.keepdepartment != null" >
        keepdepartment = #{record.keepdepartment,jdbcType=VARCHAR},
      </if>
      <if test="record.usestate != null" >
        usestate = #{record.usestate,jdbcType=VARCHAR},
      </if>
      <if test="record.certificate != null" >
        certificate = #{record.certificate,jdbcType=VARCHAR},
      </if>
      <if test="record.state != null" >
        state = #{record.state,jdbcType=VARCHAR},
      </if>
      <if test="record.isbegin != null" >
        isbegin = #{record.isbegin,jdbcType=BIT},
      </if>
      <if test="record.ghostyear != null" >
        ghostyear = #{record.ghostyear,jdbcType=VARCHAR},
      </if>
      <if test="record.startusetime != null" >
        startusetime = #{record.startusetime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.makecardtime != null" >
        makecardtime = #{record.makecardtime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.remark != null" >
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
      <if test="record.number != null" >
        number = #{record.number,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update t_asset
    <!-- set id = #{record.id,jdbcType=INTEGER}, -->
     set sob = #{record.sob,jdbcType=VARCHAR},
      code = #{record.code,jdbcType=VARCHAR},
      name = #{record.name,jdbcType=VARCHAR},
      type = #{record.type,jdbcType=VARCHAR},
      model = #{record.model,jdbcType=VARCHAR},
      purchasetime = #{record.purchasetime,jdbcType=TIMESTAMP},
      value = #{record.value,jdbcType=DOUBLE},
      user = #{record.user,jdbcType=VARCHAR},
      usedepartment = #{record.usedepartment,jdbcType=VARCHAR},
      keeper = #{record.keeper,jdbcType=VARCHAR},
      keepdepartment = #{record.keepdepartment,jdbcType=VARCHAR},
      usestate = #{record.usestate,jdbcType=VARCHAR},
      certificate = #{record.certificate,jdbcType=VARCHAR},
      state = #{record.state,jdbcType=VARCHAR},
      isbegin = #{record.isbegin,jdbcType=BIT},
      ghostyear = #{record.ghostyear,jdbcType=VARCHAR},
      startusetime = #{record.startusetime,jdbcType=TIMESTAMP},
      makecardtime = #{record.makecardtime,jdbcType=TIMESTAMP},
      remark = #{record.remark,jdbcType=VARCHAR},
      number = #{record.number,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.bronze.entities.Asset" >
    update t_asset
    <set >
      <if test="sob != null" >
        sob = #{sob,jdbcType=VARCHAR},
      </if>
      <if test="code != null" >
        code = #{code,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        type = #{type,jdbcType=VARCHAR},
      </if>
      <if test="model != null" >
        model = #{model,jdbcType=VARCHAR},
      </if>
      <if test="purchasetime != null" >
        purchasetime = #{purchasetime,jdbcType=TIMESTAMP},
      </if>
      <if test="value != null" >
        value = #{value,jdbcType=DOUBLE},
      </if>
      <if test="user != null" >
        user = #{user,jdbcType=VARCHAR},
      </if>
      <if test="usedepartment != null" >
        usedepartment = #{usedepartment,jdbcType=VARCHAR},
      </if>
      <if test="keeper != null" >
        keeper = #{keeper,jdbcType=VARCHAR},
      </if>
      <if test="keepdepartment != null" >
        keepdepartment = #{keepdepartment,jdbcType=VARCHAR},
      </if>
      <if test="usestate != null" >
        usestate = #{usestate,jdbcType=VARCHAR},
      </if>
      <if test="certificate != null" >
        certificate = #{certificate,jdbcType=VARCHAR},
      </if>
      <if test="state != null" >
        state = #{state,jdbcType=VARCHAR},
      </if>
      <if test="isbegin != null" >
        isbegin = #{isbegin,jdbcType=BIT},
      </if>
      <if test="ghostyear != null" >
        ghostyear = #{ghostyear,jdbcType=VARCHAR},
      </if>
      <if test="startusetime != null" >
        startusetime = #{startusetime,jdbcType=TIMESTAMP},
      </if>
      <if test="makecardtime != null" >
        makecardtime = #{makecardtime,jdbcType=TIMESTAMP},
      </if>
      <if test="remark != null" >
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="number != null" >
        number = #{number,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.bronze.entities.Asset" >
    update t_asset
    set sob = #{sob,jdbcType=VARCHAR},
      code = #{code,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      type = #{type,jdbcType=VARCHAR},
      model = #{model,jdbcType=VARCHAR},
      purchasetime = #{purchasetime,jdbcType=TIMESTAMP},
      value = #{value,jdbcType=DOUBLE},
      user = #{user,jdbcType=VARCHAR},
      usedepartment = #{usedepartment,jdbcType=VARCHAR},
      keeper = #{keeper,jdbcType=VARCHAR},
      keepdepartment = #{keepdepartment,jdbcType=VARCHAR},
      usestate = #{usestate,jdbcType=VARCHAR},
      certificate = #{certificate,jdbcType=VARCHAR},
      state = #{state,jdbcType=VARCHAR},
      isbegin = #{isbegin,jdbcType=BIT},
      ghostyear = #{ghostyear,jdbcType=VARCHAR},
      startusetime = #{startusetime,jdbcType=TIMESTAMP},
      makecardtime = #{makecardtime,jdbcType=TIMESTAMP},
      remark = #{remark,jdbcType=VARCHAR},
      number = #{number,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>