<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://java.sun.com/xml/ns/javaee" xmlns:web="http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd" xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd" version="3.0">
  <display-name>taxoffice</display-name>
 <!-- post乱码过虑器 -->
	<filter>
		<filter-name>CharacterEncodingFilter</filter-name>
		<filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
		<init-param>
			<param-name>encoding</param-name>
			<param-value>utf-8</param-value>
		</init-param>
	</filter>
	<filter-mapping>
		<filter-name>CharacterEncodingFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>
	
	<!-- 加载spring容器 -->
	<display-name>bronze</display-name>
    <context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>classpath:spring/applicationContext-*.xml</param-value>
	</context-param>
	<listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>


	<display-name>bronzeinit</display-name>
	<listener>
		<listener-class>cn.bronze.listener.TaxOfficeInitListener</listener-class>
	</listener>

	<!-- springmvc前端控制器 -->
	<servlet>
		<servlet-name>springmvc</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
		<!-- contextConfigLocation配置springmvc加载的配置文件（配置处理器映射器、适配器等等） 如果不配置contextConfigLocation，默认加载的是/WEB-INF/servlet名称-serlvet.xml（springmvc-servlet.xml） -->
		<init-param>
			<param-name>contextConfigLocation</param-name>
			<param-value>classpath:spring/springmvc.xml</param-value>
		</init-param>
	</servlet>

	<servlet-mapping>
		<servlet-name>springmvc</servlet-name>
		<!-- 第一种：*.action，访问以.action结尾 由DispatcherServlet进行解析 
			第二种：/，所以访问的地址都由DispatcherServlet进行解析，对于静态文件的解析需要配置不让DispatcherServlet进行解析 
			使用此种方式可以实现 RESTful风格的url 
			第三种：/*，这样配置不对，使用这种配置，最终要转发到一个jsp页面时， 仍然会由DispatcherServlet解析jsp地址，不能根据jsp页面找到handler，会报错。 -->
		<url-pattern>*.htm</url-pattern>
	</servlet-mapping>
	<!-- 分页实现的标签 -->
	<jsp-config>
    <taglib>

        <taglib-uri>/pageuri</taglib-uri>

        <taglib-location>/WEB-INF/page.tld</taglib-location>

    </taglib>

  </jsp-config>
  
  <!-- 配置  Shiro 的 Filter -->
	<filter>
        <filter-name>shiroFilter</filter-name>
        <filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
        <init-param>
            <param-name>targetFilterLifecycle</param-name>
            <param-value>true</param-value>
        </init-param>
    </filter>

    <filter-mapping>
        <filter-name>shiroFilter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>
  
  
<!--   <servlet>
	  <servlet-name>download</servlet-name>
		<servlet-class>cn.bronze.ftp.servlet.DownloadServlet</servlet-class>
  </servlet>
  
  <servlet-mapping>
  		<servlet-name>download</servlet-name>
  		<url-pattern>/download/*</url-pattern>
  </servlet-mapping> -->
	
	<!-- springmvc前端控制器，rest配置 -->
	<!-- contextConfigLocation配置springmvc加载的配置文件（配置处理器映射器、适配器等等） 如果不配置contextConfigLocation，默认加载的是/WEB-INF/servlet名称-serlvet.xml（springmvc-servlet.xml） -->
	
	<!-- <servlet>
		<servlet-name>springmvc_rest</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
		
		<init-param>
			<param-name>contextConfigLocation</param-name>
			<param-value>classpath:spring/springmvc.xml</param-value>
		</init-param>
	</servlet>

	<servlet-mapping>
		<servlet-name>springmvc_rest</servlet-name>
		<url-pattern>/</url-pattern>
	</servlet-mapping> -->

  <!-- <error-page>
    <error-code>404</error-code>
    <location>/WEB-INF/4++or5++error.jsp</location>
</error-page> -->

  
  
  
  <welcome-file-list>
     <welcome-file>index.htm</welcome-file>
  </welcome-file-list>
  <error-page>  
<error-code>400</error-code>  
<location>/error.jsp</location>  
</error-page>  
<!-- 404 页面不存在错误 -->  
<error-page>  
<error-code>404</error-code>  
<location>/error.jsp</location>  
</error-page>  
<!-- 500 服务器内部错误 -->
<error-page>  
<error-code>500</error-code>  
<location>/error.jsp</location>  
</error-page>  
<!-- java.lang.Exception异常错误,依据这个标记可定义多个类似错误提示  --> 
<error-page>  
<exception-type>java.lang.Exception</exception-type>  
<location>/error.jsp</location>  
</error-page>  
<!-- java.lang.NullPointerException异常错误,依据这个标记可定义多个类似错误提示 -->  
<error-page>  
<exception-type>java.lang.NullPointerException </exception-type>  
<location>/error.jsp</location>  
</error-page>  
  
<error-page>  
<exception-type>javax.servlet.ServletException</exception-type>  
<location>/error.jsp</location>  
</error-page> 
  
</web-app>